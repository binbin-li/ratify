name: build-pr

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_TEST_REGISTRY: 'wabbitnetworks.azurecr.io'

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: setup go environment
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Run tidy
        run: go mod tidy
      - name: Build CLI
        run: make
      - name: Check build
        run: bin/ratify version
  
  build_test_cli:
    name: "Build and run tests for CLI"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: setup go environment
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Run tidy
        run: go mod tidy
      - name: Build CLI
        run: make
      - name: Check build
        run: bin/ratify version
      - name: Test CLI
        run: |
          make install ratify-config install-bats
          make test-e2e-cli

  build_test_e2e:
    name: "Build and run e2e Test"
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        KUBERNETES_VERSION: ["1.23.13", "1.24.6", "1.25.3"]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Bootstrap e2e
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          make e2e-bootstrap KUBERNETES_VERSION=${{ matrix.KUBERNETES_VERSION }}
      
      - name: Run e2e
        run: |
          make e2e-deploy-gatekeeper
          make e2e-deploy-ratify
          make test-e2e

      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l control-plane=controller-manager --tail=-1 > logs-externaldata-controller.json
          kubectl logs -n gatekeeper-system -l control-plane=audit-controller --tail=-1 > logs-externaldata-audit.json
          kubectl logs -n ratify-service -l app=ratify --tail=-1 > logs-ratify-preinstall.json
          kubectl logs -n ratify-service -l app.kubernetes.io/name=ratify --tail=-1 > logs-ratify.json
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: e2e-logs
          path: |
            logs-*.json        
  
  build_test_aks_e2e:
    name: "Build and run e2e Test on AKS"
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        KUBERNETES_VERSION: ["1.24.6"]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Bootstrap e2e
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          make e2e-bootstrap KUBERNETES_VERSION=${{ matrix.KUBERNETES_VERSION }}

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Connect to AKS cluster
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_GROUP }} --name ${{ secrets.AKS_NAME }} 

      - name: Log into ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_TEST_REGISTRY }}
          username: ${{ secrets.APPLICATION_CLIENT_ID }}
          password: ${{ secrets.APPLICATION_CLIENT_SECRET }}

      - name: Run e2e on ACR
        run: |
          make e2e-deploy-gatekeeper
          make e2e-deploy-ratify-to-aks APPLICATION_CLIENT_ID=${{ secrets.APPLICATION_CLIENT_ID }} ACR_TEST_REGISTRY=$ACR_TEST_REGISTRY
          make test-e2e
          make clean-up

      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l control-plane=controller-manager --tail=-1 > logs-externaldata-controller-aks.json
          kubectl logs -n gatekeeper-system -l control-plane=audit-controller --tail=-1 > logs-externaldata-audit-aks.json
          kubectl logs -n ratify-service -l app=ratify --tail=-1 > logs-ratify-preinstall-aks.json
          kubectl logs -n ratify-service -l app.kubernetes.io/name=ratify --tail=-1 > logs-ratify-aks.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: e2e-logs
          path: |
            logs-*.json       
