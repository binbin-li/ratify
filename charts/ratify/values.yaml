image:
  repository: ghcr.io/deislabs/ratify
  crdRepository: ghcr.io/deislabs/ratify-crds
  tag: v1.0.0-beta.1
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""
ratifyTestCert: |
  -----BEGIN CERTIFICATE-----
  MIIDVjCCAj6gAwIBAgIBUTANBgkqhkiG9w0BAQsFADBaMQswCQYDVQQGEwJVUzEL
  MAkGA1UECBMCV0ExEDAOBgNVBAcTB1NlYXR0bGUxDzANBgNVBAoTBk5vdGFyeTEb
  MBkGA1UEAxMSd2FiYml0LW5ldHdvcmtzLmlvMB4XDTIyMTExODA2MTA0NVoXDTIy
  MTExOTA2MTA0NVowWjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQH
  EwdTZWF0dGxlMQ8wDQYDVQQKEwZOb3RhcnkxGzAZBgNVBAMTEndhYmJpdC1uZXR3
  b3Jrcy5pbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKihKIy7qOp+
  TZB91f/tOuK3XtPVQcDSZI5s8VRa76pbHp1QboJaL5FypsCFj3aKxo4Y32H1KdBm
  x5FdXwN49Tr1Au1nfJCFYxANfEHEd1FplwCDz1sIBujH+hhZbqwXHYz1UDhpTDwI
  WBtX72x7sqefJOdQepKv8YpyAeXtez4/e52AGz+Hhd4R6UmCZiOJzrkowdx4gd7L
  2j5dIi87gjP4Y6q0G6x9rPfr53nvvZx4bEAQ7w9k574IefA22Ksr7k2/dKzt3f5z
  hZgYOXlJUwiGew3+KaD6t2uvjWgkWrPoeEZJc9YygP3IMyCdvkThP4nZ01C0+SYF
  dxK1JIWG1rcCAwEAAaMnMCUwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsG
  AQUFBwMDMA0GCSqGSIb3DQEBCwUAA4IBAQBFp62Oja59xsIV/SQKY/tubQYsw2Bc
  sgkc3DZ69iJCI5lbfKGswLVDR9JIqhINInKD6kSs/ZWU+nCH7R28IllBxKTjA/IV
  7FUCbx+DfZXjcZhRqdO9fHuRANKZQ2dg2+XOqKMa5Z9uWoRGk2iB9PD1WOh3U5KZ
  b8F/IWI5tZ0Fj2M54QLWOxwKdnJAnZeZdFvompTWA9JG16dXdk2wYs9cvrK0Vayd
  AytpVffdkOQkDOufGjPZN7ykYfw7Fhzsh0QJLIDbP16+g+HFqVSn0M5AEEh07Wvj
  7kv52l3hvXBh06f8x3O//GKrn5IRwE+1RT05gcqIjxDhGTSRVElps2se
  -----END CERTIFICATE-----
cosign:
  enabled: false
  key: ""
resources:
   limits:
     cpu: 1000m
     memory: 512Mi
   requests:
     cpu: 600m
     memory: 512Mi
serviceAccount:
  create: false
  name:

# Can be used to authenticate to:
# ACR -> oras.authProviders.azureWorkloadIdentityEnabled
# Key Vault -> akvCertConfig.enabled
azureWorkloadIdentity:
  clientId:

azureManagedIdentity:
  clientId:
  tenantId:

akvCertConfig:
  enabled: false
  vaultName:
  cert1Name:
  cert2Name:
  tenantId:

oras:
  authProviders:
    azureWorkloadIdentityEnabled: false
    azureManagedIdentityEnabled: false
    k8secretsEnabled: false
    awsEcrBasicEnabled: false

provider:
  auth: ""                  # tls, mtls
  tls:
    skipVerify: true        # skip TLS verification
    crt: ""                 # crt used by ratify (httpserver)
    key: ""                 # key used by ratify (httpserver)
    cabundle: ""            # base64 encoded CA bundle used for the 'caBundle' property for the ratify provider within gatekeeper

podAnnotations: {}
podLabels: {}
enableRuntimeDefaultSeccompProfile: true

rbac:
  create: true
  
upgradeCRDs:
  enabled: true
  extraRules: []

crds:
  affinity: {}
  tolerations: []
  nodeSelector: {kubernetes.io/os: linux}
  resources: {}
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsGroup: 65532
    runAsNonRoot: true
    runAsUser: 65532
